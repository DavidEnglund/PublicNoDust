//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dustbuster.au.com.sunhawk {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/sunhawk_SP_svc")]
    public partial class CompositeType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="au.com.sunhawk.ISunhawk_SP_svc")]
    public interface ISunhawk_SP_svc {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISunhawk_SP_svc/checkConnection", ReplyAction="http://tempuri.org/ISunhawk_SP_svc/checkConnectionResponse")]
        System.IAsyncResult BegincheckConnection(System.AsyncCallback callback, object asyncState);
        
        bool EndcheckConnection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISunhawk_SP_svc/testMethod", ReplyAction="http://tempuri.org/ISunhawk_SP_svc/testMethodResponse")]
        System.IAsyncResult BegintestMethod(System.AsyncCallback callback, object asyncState);
        
        bool EndtestMethod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISunhawk_SP_svc/addContact", ReplyAction="http://tempuri.org/ISunhawk_SP_svc/addContactResponse")]
        System.IAsyncResult BeginaddContact(string name, string email, string phone, System.AsyncCallback callback, object asyncState);
        
        int EndaddContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISunhawk_SP_svc/updateContact", ReplyAction="http://tempuri.org/ISunhawk_SP_svc/updateContactResponse")]
        System.IAsyncResult BeginupdateContact(int ID, string name, string email, string phone, System.AsyncCallback callback, object asyncState);
        
        int EndupdateContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISunhawk_SP_svc/getLatestDbVersion", ReplyAction="http://tempuri.org/ISunhawk_SP_svc/getLatestDbVersionResponse")]
        System.IAsyncResult BegingetLatestDbVersion(System.AsyncCallback callback, object asyncState);
        
        int EndgetLatestDbVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISunhawk_SP_svc/getLatestDb", ReplyAction="http://tempuri.org/ISunhawk_SP_svc/getLatestDbResponse")]
        System.IAsyncResult BegingetLatestDb(System.AsyncCallback callback, object asyncState);
        
        byte[] EndgetLatestDb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISunhawk_SP_svc/GetData", ReplyAction="http://tempuri.org/ISunhawk_SP_svc/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISunhawk_SP_svc/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ISunhawk_SP_svc/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(Dustbuster.au.com.sunhawk.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        Dustbuster.au.com.sunhawk.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISunhawk_SP_svcChannel : Dustbuster.au.com.sunhawk.ISunhawk_SP_svc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class checkConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public checkConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class testMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public testMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class addContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public addContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class updateContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public updateContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getLatestDbVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getLatestDbVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getLatestDbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getLatestDbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Dustbuster.au.com.sunhawk.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Dustbuster.au.com.sunhawk.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Sunhawk_SP_svcClient : System.ServiceModel.ClientBase<Dustbuster.au.com.sunhawk.ISunhawk_SP_svc>, Dustbuster.au.com.sunhawk.ISunhawk_SP_svc {
        
        private BeginOperationDelegate onBegincheckConnectionDelegate;
        
        private EndOperationDelegate onEndcheckConnectionDelegate;
        
        private System.Threading.SendOrPostCallback oncheckConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBegintestMethodDelegate;
        
        private EndOperationDelegate onEndtestMethodDelegate;
        
        private System.Threading.SendOrPostCallback ontestMethodCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddContactDelegate;
        
        private EndOperationDelegate onEndaddContactDelegate;
        
        private System.Threading.SendOrPostCallback onaddContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginupdateContactDelegate;
        
        private EndOperationDelegate onEndupdateContactDelegate;
        
        private System.Threading.SendOrPostCallback onupdateContactCompletedDelegate;
        
        private BeginOperationDelegate onBegingetLatestDbVersionDelegate;
        
        private EndOperationDelegate onEndgetLatestDbVersionDelegate;
        
        private System.Threading.SendOrPostCallback ongetLatestDbVersionCompletedDelegate;
        
        private BeginOperationDelegate onBegingetLatestDbDelegate;
        
        private EndOperationDelegate onEndgetLatestDbDelegate;
        
        private System.Threading.SendOrPostCallback ongetLatestDbCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Sunhawk_SP_svcClient() : 
                base(Sunhawk_SP_svcClient.GetDefaultBinding(), Sunhawk_SP_svcClient.GetDefaultEndpointAddress()) {
        }
        
        public Sunhawk_SP_svcClient(EndpointConfiguration endpointConfiguration) : 
                base(Sunhawk_SP_svcClient.GetBindingForEndpoint(endpointConfiguration), Sunhawk_SP_svcClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public Sunhawk_SP_svcClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Sunhawk_SP_svcClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public Sunhawk_SP_svcClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Sunhawk_SP_svcClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public Sunhawk_SP_svcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<checkConnectionCompletedEventArgs> checkConnectionCompleted;
        
        public event System.EventHandler<testMethodCompletedEventArgs> testMethodCompleted;
        
        public event System.EventHandler<addContactCompletedEventArgs> addContactCompleted;
        
        public event System.EventHandler<updateContactCompletedEventArgs> updateContactCompleted;
        
        public event System.EventHandler<getLatestDbVersionCompletedEventArgs> getLatestDbVersionCompleted;
        
        public event System.EventHandler<getLatestDbCompletedEventArgs> getLatestDbCompleted;
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.BegincheckConnection(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegincheckConnection(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.EndcheckConnection(System.IAsyncResult result) {
            return base.Channel.EndcheckConnection(result);
        }
        
        private System.IAsyncResult OnBegincheckConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).BegincheckConnection(callback, asyncState);
        }
        
        private object[] OnEndcheckConnection(System.IAsyncResult result) {
            bool retVal = ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).EndcheckConnection(result);
            return new object[] {
                    retVal};
        }
        
        private void OncheckConnectionCompleted(object state) {
            if ((this.checkConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.checkConnectionCompleted(this, new checkConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void checkConnectionAsync() {
            this.checkConnectionAsync(null);
        }
        
        public void checkConnectionAsync(object userState) {
            if ((this.onBegincheckConnectionDelegate == null)) {
                this.onBegincheckConnectionDelegate = new BeginOperationDelegate(this.OnBegincheckConnection);
            }
            if ((this.onEndcheckConnectionDelegate == null)) {
                this.onEndcheckConnectionDelegate = new EndOperationDelegate(this.OnEndcheckConnection);
            }
            if ((this.oncheckConnectionCompletedDelegate == null)) {
                this.oncheckConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OncheckConnectionCompleted);
            }
            base.InvokeAsync(this.onBegincheckConnectionDelegate, null, this.onEndcheckConnectionDelegate, this.oncheckConnectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.BegintestMethod(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegintestMethod(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.EndtestMethod(System.IAsyncResult result) {
            return base.Channel.EndtestMethod(result);
        }
        
        private System.IAsyncResult OnBegintestMethod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).BegintestMethod(callback, asyncState);
        }
        
        private object[] OnEndtestMethod(System.IAsyncResult result) {
            bool retVal = ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).EndtestMethod(result);
            return new object[] {
                    retVal};
        }
        
        private void OntestMethodCompleted(object state) {
            if ((this.testMethodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.testMethodCompleted(this, new testMethodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void testMethodAsync() {
            this.testMethodAsync(null);
        }
        
        public void testMethodAsync(object userState) {
            if ((this.onBegintestMethodDelegate == null)) {
                this.onBegintestMethodDelegate = new BeginOperationDelegate(this.OnBegintestMethod);
            }
            if ((this.onEndtestMethodDelegate == null)) {
                this.onEndtestMethodDelegate = new EndOperationDelegate(this.OnEndtestMethod);
            }
            if ((this.ontestMethodCompletedDelegate == null)) {
                this.ontestMethodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OntestMethodCompleted);
            }
            base.InvokeAsync(this.onBegintestMethodDelegate, null, this.onEndtestMethodDelegate, this.ontestMethodCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.BeginaddContact(string name, string email, string phone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddContact(name, email, phone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.EndaddContact(System.IAsyncResult result) {
            return base.Channel.EndaddContact(result);
        }
        
        private System.IAsyncResult OnBeginaddContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string email = ((string)(inValues[1]));
            string phone = ((string)(inValues[2]));
            return ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).BeginaddContact(name, email, phone, callback, asyncState);
        }
        
        private object[] OnEndaddContact(System.IAsyncResult result) {
            int retVal = ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).EndaddContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnaddContactCompleted(object state) {
            if ((this.addContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addContactCompleted(this, new addContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addContactAsync(string name, string email, string phone) {
            this.addContactAsync(name, email, phone, null);
        }
        
        public void addContactAsync(string name, string email, string phone, object userState) {
            if ((this.onBeginaddContactDelegate == null)) {
                this.onBeginaddContactDelegate = new BeginOperationDelegate(this.OnBeginaddContact);
            }
            if ((this.onEndaddContactDelegate == null)) {
                this.onEndaddContactDelegate = new EndOperationDelegate(this.OnEndaddContact);
            }
            if ((this.onaddContactCompletedDelegate == null)) {
                this.onaddContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddContactCompleted);
            }
            base.InvokeAsync(this.onBeginaddContactDelegate, new object[] {
                        name,
                        email,
                        phone}, this.onEndaddContactDelegate, this.onaddContactCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.BeginupdateContact(int ID, string name, string email, string phone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginupdateContact(ID, name, email, phone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.EndupdateContact(System.IAsyncResult result) {
            return base.Channel.EndupdateContact(result);
        }
        
        private System.IAsyncResult OnBeginupdateContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int ID = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            string email = ((string)(inValues[2]));
            string phone = ((string)(inValues[3]));
            return ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).BeginupdateContact(ID, name, email, phone, callback, asyncState);
        }
        
        private object[] OnEndupdateContact(System.IAsyncResult result) {
            int retVal = ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).EndupdateContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnupdateContactCompleted(object state) {
            if ((this.updateContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.updateContactCompleted(this, new updateContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void updateContactAsync(int ID, string name, string email, string phone) {
            this.updateContactAsync(ID, name, email, phone, null);
        }
        
        public void updateContactAsync(int ID, string name, string email, string phone, object userState) {
            if ((this.onBeginupdateContactDelegate == null)) {
                this.onBeginupdateContactDelegate = new BeginOperationDelegate(this.OnBeginupdateContact);
            }
            if ((this.onEndupdateContactDelegate == null)) {
                this.onEndupdateContactDelegate = new EndOperationDelegate(this.OnEndupdateContact);
            }
            if ((this.onupdateContactCompletedDelegate == null)) {
                this.onupdateContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnupdateContactCompleted);
            }
            base.InvokeAsync(this.onBeginupdateContactDelegate, new object[] {
                        ID,
                        name,
                        email,
                        phone}, this.onEndupdateContactDelegate, this.onupdateContactCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.BegingetLatestDbVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetLatestDbVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.EndgetLatestDbVersion(System.IAsyncResult result) {
            return base.Channel.EndgetLatestDbVersion(result);
        }
        
        private System.IAsyncResult OnBegingetLatestDbVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).BegingetLatestDbVersion(callback, asyncState);
        }
        
        private object[] OnEndgetLatestDbVersion(System.IAsyncResult result) {
            int retVal = ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).EndgetLatestDbVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetLatestDbVersionCompleted(object state) {
            if ((this.getLatestDbVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getLatestDbVersionCompleted(this, new getLatestDbVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getLatestDbVersionAsync() {
            this.getLatestDbVersionAsync(null);
        }
        
        public void getLatestDbVersionAsync(object userState) {
            if ((this.onBegingetLatestDbVersionDelegate == null)) {
                this.onBegingetLatestDbVersionDelegate = new BeginOperationDelegate(this.OnBegingetLatestDbVersion);
            }
            if ((this.onEndgetLatestDbVersionDelegate == null)) {
                this.onEndgetLatestDbVersionDelegate = new EndOperationDelegate(this.OnEndgetLatestDbVersion);
            }
            if ((this.ongetLatestDbVersionCompletedDelegate == null)) {
                this.ongetLatestDbVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetLatestDbVersionCompleted);
            }
            base.InvokeAsync(this.onBegingetLatestDbVersionDelegate, null, this.onEndgetLatestDbVersionDelegate, this.ongetLatestDbVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.BegingetLatestDb(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetLatestDb(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.EndgetLatestDb(System.IAsyncResult result) {
            return base.Channel.EndgetLatestDb(result);
        }
        
        private System.IAsyncResult OnBegingetLatestDb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).BegingetLatestDb(callback, asyncState);
        }
        
        private object[] OnEndgetLatestDb(System.IAsyncResult result) {
            byte[] retVal = ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).EndgetLatestDb(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetLatestDbCompleted(object state) {
            if ((this.getLatestDbCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getLatestDbCompleted(this, new getLatestDbCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getLatestDbAsync() {
            this.getLatestDbAsync(null);
        }
        
        public void getLatestDbAsync(object userState) {
            if ((this.onBegingetLatestDbDelegate == null)) {
                this.onBegingetLatestDbDelegate = new BeginOperationDelegate(this.OnBegingetLatestDb);
            }
            if ((this.onEndgetLatestDbDelegate == null)) {
                this.onEndgetLatestDbDelegate = new EndOperationDelegate(this.OnEndgetLatestDb);
            }
            if ((this.ongetLatestDbCompletedDelegate == null)) {
                this.ongetLatestDbCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetLatestDbCompleted);
            }
            base.InvokeAsync(this.onBegingetLatestDbDelegate, null, this.onEndgetLatestDbDelegate, this.ongetLatestDbCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.BeginGetDataUsingDataContract(Dustbuster.au.com.sunhawk.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Dustbuster.au.com.sunhawk.CompositeType Dustbuster.au.com.sunhawk.ISunhawk_SP_svc.EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Dustbuster.au.com.sunhawk.CompositeType composite = ((Dustbuster.au.com.sunhawk.CompositeType)(inValues[0]));
            return ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            Dustbuster.au.com.sunhawk.CompositeType retVal = ((Dustbuster.au.com.sunhawk.ISunhawk_SP_svc)(this)).EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(Dustbuster.au.com.sunhawk.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(Dustbuster.au.com.sunhawk.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Dustbuster.au.com.sunhawk.ISunhawk_SP_svc CreateChannel() {
            return new Sunhawk_SP_svcClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISunhawk_SP_svc)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISunhawk_SP_svc)) {
                return new System.ServiceModel.EndpointAddress("http://student.mydesign.central.wa.edu.au/sunhawk_svc/Sunhawk_SP_svc.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return Sunhawk_SP_svcClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISunhawk_SP_svc);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return Sunhawk_SP_svcClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISunhawk_SP_svc);
        }
        
        private class Sunhawk_SP_svcClientChannel : ChannelBase<Dustbuster.au.com.sunhawk.ISunhawk_SP_svc>, Dustbuster.au.com.sunhawk.ISunhawk_SP_svc {
            
            public Sunhawk_SP_svcClientChannel(System.ServiceModel.ClientBase<Dustbuster.au.com.sunhawk.ISunhawk_SP_svc> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegincheckConnection(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("checkConnection", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndcheckConnection(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("checkConnection", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegintestMethod(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("testMethod", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndtestMethod(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("testMethod", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginaddContact(string name, string email, string phone, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = name;
                _args[1] = email;
                _args[2] = phone;
                System.IAsyncResult _result = base.BeginInvoke("addContact", _args, callback, asyncState);
                return _result;
            }
            
            public int EndaddContact(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("addContact", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginupdateContact(int ID, string name, string email, string phone, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = ID;
                _args[1] = name;
                _args[2] = email;
                _args[3] = phone;
                System.IAsyncResult _result = base.BeginInvoke("updateContact", _args, callback, asyncState);
                return _result;
            }
            
            public int EndupdateContact(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("updateContact", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetLatestDbVersion(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getLatestDbVersion", _args, callback, asyncState);
                return _result;
            }
            
            public int EndgetLatestDbVersion(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("getLatestDbVersion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetLatestDb(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getLatestDb", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndgetLatestDb(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("getLatestDb", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataUsingDataContract(Dustbuster.au.com.sunhawk.CompositeType composite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = composite;
                System.IAsyncResult _result = base.BeginInvoke("GetDataUsingDataContract", _args, callback, asyncState);
                return _result;
            }
            
            public Dustbuster.au.com.sunhawk.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                Dustbuster.au.com.sunhawk.CompositeType _result = ((Dustbuster.au.com.sunhawk.CompositeType)(base.EndInvoke("GetDataUsingDataContract", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ISunhawk_SP_svc,
        }
    }
}
